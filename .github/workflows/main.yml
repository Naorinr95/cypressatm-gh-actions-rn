name: Cypress Tests

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: Install dependencies
        run: npm install

      - name: Run Cypress Tests
        run: npx cypress run || true

      - name: Debug JSON report contents
        if: always()
        run: |
          echo "Checking cypress directory for mochawesome JSON files"
          find cypress -name '*.json' || echo "‚ùå No report JSON files found in cypress folder"

      - name: Merge and Generate Report
        if: always()
        run: |
          chmod +x ./node_modules/.bin/mochawesome-merge || true
          chmod +x ./node_modules/.bin/marge || true

          echo "Merging JSON reports from cypress/ folder..."
          ./node_modules/.bin/mochawesome-merge cypress/**/*.json > mochawesome.json || echo "{}" > mochawesome.json

          echo "Dumping mochawesome.json:"
          head -n 20 mochawesome.json || echo "‚ùå Could not read mochawesome.json"

          echo "Generating HTML report..."
          ./node_modules/.bin/marge mochawesome.json -f report -o mochawesome-report || echo "‚ö†Ô∏è Skipping HTML report"

      - name: Upload report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: mochawesome-report
          path: mochawesome-report

      - name: Upload Cypress media
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-media
          path: |
            cypress/screenshots
            cypress/videos

      - name: Debug mochawesome.json
        if: always()
        run: |
          echo "Does mochawesome.json exist?"
          ls -l mochawesome.json || echo "‚ùå File not found"

          echo "First 20 lines of mochawesome.json:"
          head -n 20 mochawesome.json || echo "‚ùå Could not read file"

      - name: Generate test result summary table
        if: always()
        run: |
          echo "## Test Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "| ‚úÖ Passed | ‚ùå Failed | üîÑ Skipped | Total |" >> $GITHUB_STEP_SUMMARY
          echo "|----------|-----------|------------|-------|" >> $GITHUB_STEP_SUMMARY
          node -e "
          const fs = require('fs');
          try {
            const data = JSON.parse(fs.readFileSync('mochawesome.json', 'utf8'));
            let passed = 0, failed = 0, skipped = 0;
            data.results.forEach(r => {
              r.suites.forEach(s => {
                s.tests.forEach(t => {
                  if (t.state === 'passed') passed++;
                  else if (t.state === 'failed') failed++;
                  else skipped++;
                });
              });
            });
            const total = passed + failed + skipped;
            fs.appendFileSync(process.env.GITHUB_STEP_SUMMARY,
              `| ${passed} | ${failed} | ${skipped} | ${total} |\n`);
          } catch (err) {
            fs.appendFileSync(process.env.GITHUB_STEP_SUMMARY,
              '| ‚ö†Ô∏è Could not read mochawesome.json | - | - | - |\n');
          }
          "
